// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(HospitalContext))]
    [Migration("20220804103054_MaxLengthIncreased")]
    partial class MaxLengthIncreased
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CORE.Models.Doctor", b =>
                {
                    b.Property<string>("Surname")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Patronymic")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("Experience")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("HospitalUnitName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Surname", "Name", "Patronymic");

                    b.HasIndex("HospitalUnitName");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Surname = "Сєдих",
                            Name = "Олександр",
                            Patronymic = "Миколайович",
                            BirthDate = new DateTime(1970, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Experience = (byte)29,
                            HospitalUnitName = "Хірургічне відділення"
                        },
                        new
                        {
                            Surname = "Суманов",
                            Name = "Сергій",
                            Patronymic = "Валерійович",
                            BirthDate = new DateTime(1971, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Experience = (byte)28,
                            HospitalUnitName = "Хірургічне відділення"
                        },
                        new
                        {
                            Surname = "Літвінов",
                            Name = "Геннадій",
                            Patronymic = "Володимирович",
                            BirthDate = new DateTime(1955, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Experience = (byte)44,
                            HospitalUnitName = "Хірургічне відділення"
                        },
                        new
                        {
                            Surname = "Соловьова",
                            Name = "Валентина",
                            Patronymic = "Георгіївна",
                            BirthDate = new DateTime(1976, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Experience = (byte)24,
                            HospitalUnitName = "Пульмонологічне відділення"
                        },
                        new
                        {
                            Surname = "Шелест",
                            Name = "Світлана",
                            Patronymic = "Сергіївна",
                            BirthDate = new DateTime(1978, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Experience = (byte)17,
                            HospitalUnitName = "Пульмонологічне відділення"
                        });
                });

            modelBuilder.Entity("CORE.Models.HospitalUnit", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Profession")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Name");

                    b.ToTable("HospitalUnits");

                    b.HasData(
                        new
                        {
                            Name = "Хірургічне відділення",
                            Profession = "Хірург"
                        },
                        new
                        {
                            Name = "Пульмонологічне відділення",
                            Profession = "Пульмонолог"
                        });
                });

            modelBuilder.Entity("CORE.Models.HospitalWard", b =>
                {
                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<short>("BedsQuantity")
                        .HasColumnType("smallint");

                    b.Property<string>("HospitalUnitName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Number");

                    b.HasIndex("HospitalUnitName");

                    b.ToTable("HospitalWards");

                    b.HasData(
                        new
                        {
                            Number = 101,
                            BedsQuantity = (short)15,
                            HospitalUnitName = "Хірургічне відділення"
                        },
                        new
                        {
                            Number = 102,
                            BedsQuantity = (short)15,
                            HospitalUnitName = "Хірургічне відділення"
                        },
                        new
                        {
                            Number = 103,
                            BedsQuantity = (short)10,
                            HospitalUnitName = "Хірургічне відділення"
                        },
                        new
                        {
                            Number = 104,
                            BedsQuantity = (short)10,
                            HospitalUnitName = "Хірургічне відділення"
                        },
                        new
                        {
                            Number = 201,
                            BedsQuantity = (short)10,
                            HospitalUnitName = "Пульмонологічне відділення"
                        },
                        new
                        {
                            Number = 202,
                            BedsQuantity = (short)8,
                            HospitalUnitName = "Пульмонологічне відділення"
                        });
                });

            modelBuilder.Entity("CORE.Models.Illness", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("HospitalUnitName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Procedures")
                        .IsRequired()
                        .HasColumnType("varchar(5000)");

                    b.Property<string>("Symptoms")
                        .IsRequired()
                        .HasColumnType("varchar(5000)");

                    b.HasKey("Name");

                    b.HasIndex("HospitalUnitName");

                    b.ToTable("Illnesses");

                    b.HasData(
                        new
                        {
                            Name = "Хвороба №1",
                            HospitalUnitName = "Хірургічне відділення",
                            Procedures = "Розумний текст №1...",
                            Symptoms = "Симптоми №1"
                        },
                        new
                        {
                            Name = "Хвороба №2",
                            HospitalUnitName = "Хірургічне відділення",
                            Procedures = "Розумний текст №2...",
                            Symptoms = "Симптоми №2"
                        },
                        new
                        {
                            Name = "Хвороба №3",
                            HospitalUnitName = "Хірургічне відділення",
                            Procedures = "Розумний текст №3...",
                            Symptoms = "Симптоми №3"
                        },
                        new
                        {
                            Name = "Хвороба №4",
                            HospitalUnitName = "Пульмонологічне відділення",
                            Procedures = "Розумний текст №4...",
                            Symptoms = "Симптоми №4"
                        },
                        new
                        {
                            Name = "Хвороба №5",
                            HospitalUnitName = "Пульмонологічне відділення",
                            Procedures = "Розумний текст №5...",
                            Symptoms = "Симптоми №5"
                        },
                        new
                        {
                            Name = "Хвороба №6",
                            HospitalUnitName = "Хірургічне відділення",
                            Procedures = "Розумний текст №6...",
                            Symptoms = "Симптоми №6"
                        },
                        new
                        {
                            Name = "Хвороба №7",
                            HospitalUnitName = "Хірургічне відділення",
                            Procedures = "Розумний текст №7...",
                            Symptoms = "Симптоми №7"
                        },
                        new
                        {
                            Name = "Неробство",
                            HospitalUnitName = "Хірургічне відділення",
                            Procedures = "Регулярне відвідування лекційних і практичних онлайн занять, що проводять викладачі Харківського національного університету радіоелектроніки у Google meet. Заняття слід відвідувати 5 разів на тиждень, кожного тиждня, протягом 9 місяців, за відсутності особливих вказівок деканату ХНУРЕ.",
                            Symptoms = "Хворий лежить у ліжку і нічого не хоче робити, встає з ліжка тільки аби задовольнити свої базові потреби. Спостерігається так званий синдром \"сім п'ятниць на тиждень\"."
                        },
                        new
                        {
                            Name = "Нудьга",
                            HospitalUnitName = "Хірургічне відділення",
                            Procedures = "Регулярне відвідування лекційних і практичних онлайн занять, що проводять викладачі Харківського національного університету радіоелектроніки у Google meet. Заняття слід відвідувати 5 разів на тиждень, кожного тиждня, протягом 9 місяців, за відсутності особливих вказівок деканату ХНУРЕ. Задля покращення ефекту від лікування слід також приймати участь у конференціях, студенських олімпіадах чи іншою студентською активністю.",
                            Symptoms = "У хворого спостерігається прагнення відмовитися від подолання труднощів, найвне стійке небажання робити вольове зусилля. В особливо важких випадках, хворий періодично плює у стелі, поки лежить або сидить, і чекає падіння слини."
                        });
                });

            modelBuilder.Entity("CORE.Models.Medicine", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DosageForm")
                        .HasColumnType("varchar(100)");

                    b.Property<short>("QuantityInStock")
                        .HasColumnType("smallint");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Name");

                    b.ToTable("Medicines");

                    b.HasData(
                        new
                        {
                            Name = "L-лізину есцинат",
                            DosageForm = "Розчин для ін'єкцій 0,1% 5,0",
                            QuantityInStock = (short)600,
                            UnitOfMeasure = "амп."
                        },
                        new
                        {
                            Name = "Адреналін",
                            DosageForm = "Розчин для ін'єкцій, 1,82 мг/мл",
                            QuantityInStock = (short)670,
                            UnitOfMeasure = "амп."
                        },
                        new
                        {
                            Name = "Азимед",
                            DosageForm = "Таблетки, вкриті плівковою оболонкою, по 500 мг",
                            QuantityInStock = (short)516,
                            UnitOfMeasure = "таб."
                        },
                        new
                        {
                            Name = "Алопуринол",
                            DosageForm = "300 мг",
                            QuantityInStock = (short)510,
                            UnitOfMeasure = "таб."
                        },
                        new
                        {
                            Name = "Альдазол",
                            DosageForm = "400 мг",
                            QuantityInStock = (short)77,
                            UnitOfMeasure = "таб."
                        },
                        new
                        {
                            Name = "Амікацид",
                            DosageForm = "Розчин для інєкцій 250 мг/мл по 4 мл",
                            QuantityInStock = (short)68,
                            UnitOfMeasure = "фл."
                        },
                        new
                        {
                            Name = "Аміксин ІС",
                            DosageForm = "0,125 г",
                            QuantityInStock = (short)1009,
                            UnitOfMeasure = "таб."
                        },
                        new
                        {
                            Name = "Аміназин",
                            DosageForm = "Розчин для інєкцій 25 мг/мл по 2 мл",
                            QuantityInStock = (short)45,
                            UnitOfMeasure = "амп."
                        },
                        new
                        {
                            Name = "Амінокапронова",
                            DosageForm = "Кислота розчин для інфузій по 100 мл",
                            QuantityInStock = (short)928,
                            UnitOfMeasure = "фл."
                        },
                        new
                        {
                            Name = "Амлодипін",
                            DosageForm = "5 мг",
                            QuantityInStock = (short)1320,
                            UnitOfMeasure = "таб."
                        },
                        new
                        {
                            Name = "Амоксил",
                            DosageForm = "500 мг",
                            QuantityInStock = (short)160,
                            UnitOfMeasure = "таб."
                        },
                        new
                        {
                            Name = "Амоксил-К (порошок)",
                            DosageForm = "Порошок для розчину для ін'єкцій 1,2 г",
                            QuantityInStock = (short)115,
                            UnitOfMeasure = "фл."
                        },
                        new
                        {
                            Name = "Амоксил-К (табл.)",
                            DosageForm = "Таблетка вкриті плівковою оболонкою по 500мг/125мг",
                            QuantityInStock = (short)280,
                            UnitOfMeasure = "таб."
                        },
                        new
                        {
                            Name = "Анальгін (табл.)",
                            DosageForm = "0,5г",
                            QuantityInStock = (short)460,
                            UnitOfMeasure = "таб."
                        },
                        new
                        {
                            Name = "Анальгін (амп.)",
                            DosageForm = "Розчин для ін'єкцій по 2 мл",
                            QuantityInStock = (short)1680,
                            UnitOfMeasure = "амп."
                        },
                        new
                        {
                            Name = "Анаприлін здоров'я",
                            DosageForm = "40 мг",
                            QuantityInStock = (short)75,
                            UnitOfMeasure = "таб."
                        },
                        new
                        {
                            Name = "Аргітек",
                            DosageForm = "Розчин для інфузій, 8 мг/мл по 250 мл у флаконі",
                            QuantityInStock = (short)64,
                            UnitOfMeasure = "фл."
                        },
                        new
                        {
                            Name = "Аріс",
                            DosageForm = "Порошок для розчину для інфузій по 1 г meropenem",
                            QuantityInStock = (short)24,
                            UnitOfMeasure = "фл."
                        },
                        new
                        {
                            Name = "Асакол",
                            DosageForm = "Таблетки, вкриті оболонкою, кишковорозчинні по 800 мг mesalazine",
                            QuantityInStock = (short)340,
                            UnitOfMeasure = "таб."
                        },
                        new
                        {
                            Name = "Асиброкс",
                            DosageForm = "200 мг acetylcysteine",
                            QuantityInStock = (short)200,
                            UnitOfMeasure = "таб."
                        },
                        new
                        {
                            Name = "Аспаркам",
                            DosageForm = "Розчин для ін'єкцій 10 мл magnesium (different salts in combination)",
                            QuantityInStock = (short)920,
                            UnitOfMeasure = "амп."
                        },
                        new
                        {
                            Name = "Атерокард",
                            DosageForm = "75 мг clopidogrel",
                            QuantityInStock = (short)90,
                            UnitOfMeasure = "таб."
                        },
                        new
                        {
                            Name = "Ацекор",
                            DosageForm = "Кардіо таблетки кишковорозчинні по 100 мг",
                            QuantityInStock = (short)1200,
                            UnitOfMeasure = "таб."
                        },
                        new
                        {
                            Name = "Беталок",
                            DosageForm = "Розчин для ін'єкцій 5 мл metoprolol",
                            QuantityInStock = (short)130,
                            UnitOfMeasure = "амп."
                        },
                        new
                        {
                            Name = "Бинт не стерильний",
                            QuantityInStock = (short)1000,
                            UnitOfMeasure = "шт."
                        },
                        new
                        {
                            Name = "Бинт стерильний",
                            QuantityInStock = (short)650,
                            UnitOfMeasure = "шт."
                        },
                        new
                        {
                            Name = "Бісопрол",
                            DosageForm = "2,5 мг",
                            QuantityInStock = (short)230,
                            UnitOfMeasure = "таб."
                        },
                        new
                        {
                            Name = "Браксон",
                            DosageForm = "Розчин для інєкцій 40 мг/мл по 2 мг",
                            QuantityInStock = (short)30,
                            UnitOfMeasure = "фл."
                        },
                        new
                        {
                            Name = "Валідол",
                            DosageForm = "0,06 г",
                            QuantityInStock = (short)103,
                            UnitOfMeasure = "таб."
                        },
                        new
                        {
                            Name = "Варфарин-ФС",
                            DosageForm = "Таблетки по 2, 5мг",
                            QuantityInStock = (short)80,
                            UnitOfMeasure = "таб."
                        },
                        new
                        {
                            Name = "Вітаксон",
                            DosageForm = "Розчин для інєкцій по 2 мл",
                            QuantityInStock = (short)644,
                            UnitOfMeasure = "амп."
                        },
                        new
                        {
                            Name = "Вугілля активоване",
                            DosageForm = "250 мг",
                            QuantityInStock = (short)800,
                            UnitOfMeasure = "таб."
                        },
                        new
                        {
                            Name = "Галоприл",
                            DosageForm = "Розчин для ін'єкцій, 5 мг/мл в ампулі",
                            QuantityInStock = (short)74,
                            UnitOfMeasure = "амп."
                        },
                        new
                        {
                            Name = "Гекодез",
                            DosageForm = "Розчин для інфузій 200 мл",
                            QuantityInStock = (short)242,
                            UnitOfMeasure = "фл."
                        },
                        new
                        {
                            Name = "Гентаміцин-Здоров'я",
                            DosageForm = "Розчин для ін'єкцій, 40 мг/мл, по 2 мл",
                            QuantityInStock = (short)250,
                            UnitOfMeasure = "амп."
                        },
                        new
                        {
                            Name = "Гепадиф",
                            DosageForm = "Порошок для приготування розчину для інєкцій",
                            QuantityInStock = (short)327,
                            UnitOfMeasure = "фл."
                        },
                        new
                        {
                            Name = "Герпевір",
                            DosageForm = "Таблетки по 400 мг по 10 таблеток у блістері",
                            QuantityInStock = (short)600,
                            UnitOfMeasure = "таб."
                        },
                        new
                        {
                            Name = "Глутаргін",
                            DosageForm = "Розчин для ін’єкцій, 40 мг/мл, по 5 мл",
                            QuantityInStock = (short)185,
                            UnitOfMeasure = "амп."
                        },
                        new
                        {
                            Name = "Глюкоза (по 200мл)",
                            DosageForm = "Розчин для інфузій, 50 мг/мл по 200 мл",
                            QuantityInStock = (short)1295,
                            UnitOfMeasure = "фл."
                        },
                        new
                        {
                            Name = "Глюкоза (по 400мл)",
                            DosageForm = "Розчин для інфузій, 50 мг/мл по 400 мл",
                            QuantityInStock = (short)1200,
                            UnitOfMeasure = "фл."
                        },
                        new
                        {
                            Name = "Глюкоза (по 10мл)",
                            DosageForm = "Розчин для інфузій, 400 мг/мл по 10 мл",
                            QuantityInStock = (short)300,
                            UnitOfMeasure = "амп."
                        },
                        new
                        {
                            Name = "Гордокс",
                            DosageForm = "Розчин для ін'єкцій, 10 000 кіод/мл по 10 мл в ампулі",
                            QuantityInStock = (short)465,
                            UnitOfMeasure = "амп."
                        },
                        new
                        {
                            Name = "Декасан",
                            DosageForm = "Розчин, 0,2 мг/мл по 200 мл",
                            QuantityInStock = (short)196,
                            UnitOfMeasure = "фл."
                        },
                        new
                        {
                            Name = "Дексаметазон (1мл)",
                            DosageForm = "Розчин для ін'єкцій по 1 мл",
                            QuantityInStock = (short)452,
                            UnitOfMeasure = "амп."
                        },
                        new
                        {
                            Name = "Дексаметазон (4мл)",
                            DosageForm = "Розчин для ін'єкцій по 4 мл",
                            QuantityInStock = (short)1820,
                            UnitOfMeasure = "амп."
                        },
                        new
                        {
                            Name = "Дигоксин",
                            DosageForm = "Розчин для ін'єкцій, 0,25 мг/мл по 1 мл",
                            QuantityInStock = (short)310,
                            UnitOfMeasure = "амп."
                        },
                        new
                        {
                            Name = "Димедрол",
                            DosageForm = "Розчин для ін'єкцій, 10 мг/мл по 1 мл",
                            QuantityInStock = (short)740,
                            UnitOfMeasure = "амп."
                        },
                        new
                        {
                            Name = "Дофамін-Дарниця",
                            DosageForm = "Концентрат для розчину для інфузій, 40 мг/мл; по 5 мл в ампулі",
                            QuantityInStock = (short)1140,
                            UnitOfMeasure = "амп."
                        },
                        new
                        {
                            Name = "Дротаверин",
                            DosageForm = "Розчин для ін'єкцій, 20 мг/мл по 2 мл",
                            QuantityInStock = (short)547,
                            UnitOfMeasure = "амп."
                        },
                        new
                        {
                            Name = "Еналозид 25",
                            DosageForm = "Таблетки",
                            QuantityInStock = (short)360,
                            UnitOfMeasure = "таб."
                        },
                        new
                        {
                            Name = "Еноксапарин-Фармекс",
                            DosageForm = "Розчин для ін'єкцій, 10000 анти-ха мо/мл; по 0,4 мл",
                            QuantityInStock = (short)829,
                            UnitOfMeasure = "шприц."
                        },
                        new
                        {
                            Name = "Новокаїн",
                            DosageForm = "Розчин для ін'єкцій по 5 мл",
                            QuantityInStock = (short)270,
                            UnitOfMeasure = "амп."
                        },
                        new
                        {
                            Name = "Спирт етиловий",
                            DosageForm = "96% медичний",
                            QuantityInStock = (short)295,
                            UnitOfMeasure = "фл."
                        },
                        new
                        {
                            Name = "Цефтріаксон",
                            DosageForm = "Порошок для розчину для ін'єкцій 1,0 г",
                            QuantityInStock = (short)360,
                            UnitOfMeasure = "фл."
                        },
                        new
                        {
                            Name = "Ібупрофен",
                            DosageForm = "200 мг",
                            QuantityInStock = (short)1150,
                            UnitOfMeasure = "таб."
                        },
                        new
                        {
                            Name = "Магнікор",
                            DosageForm = "150 мг",
                            QuantityInStock = (short)497,
                            UnitOfMeasure = "таб."
                        });
                });

            modelBuilder.Entity("CORE.Models.Patient", b =>
                {
                    b.Property<string>("Surname")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Patronymic")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AttendingDoctorName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AttendingDoctorPatronymic")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AttendingDoctorSurname")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateOfAdmission")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Diagnosis")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("HospitalWardNumber")
                        .HasColumnType("int");

                    b.HasKey("Surname", "Name", "Patronymic");

                    b.HasIndex("Diagnosis");

                    b.HasIndex("HospitalWardNumber");

                    b.HasIndex("AttendingDoctorSurname", "AttendingDoctorName", "AttendingDoctorPatronymic");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("CORE.Models.Treatment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("IllnessName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MedicineName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<byte>("MedicineQuantity")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("IllnessName");

                    b.HasIndex("MedicineName");

                    b.ToTable("Treatments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IllnessName = "Хвороба №1",
                            MedicineName = "Азимед",
                            MedicineQuantity = (byte)2
                        },
                        new
                        {
                            Id = 2,
                            IllnessName = "Хвороба №1",
                            MedicineName = "Алопуринол",
                            MedicineQuantity = (byte)1
                        },
                        new
                        {
                            Id = 3,
                            IllnessName = "Хвороба №2",
                            MedicineName = "Аміназин",
                            MedicineQuantity = (byte)5
                        },
                        new
                        {
                            Id = 4,
                            IllnessName = "Хвороба №2",
                            MedicineName = "Амоксил",
                            MedicineQuantity = (byte)3
                        },
                        new
                        {
                            Id = 5,
                            IllnessName = "Хвороба №3",
                            MedicineName = "Анальгін (амп.)",
                            MedicineQuantity = (byte)2
                        },
                        new
                        {
                            Id = 6,
                            IllnessName = "Хвороба №4",
                            MedicineName = "Вугілля активоване",
                            MedicineQuantity = (byte)8
                        },
                        new
                        {
                            Id = 7,
                            IllnessName = "Димедрол",
                            MedicineName = "Ліки №1",
                            MedicineQuantity = (byte)1
                        },
                        new
                        {
                            Id = 8,
                            IllnessName = "Хвороба №5",
                            MedicineName = "Глюкоза (по 200мл",
                            MedicineQuantity = (byte)3
                        },
                        new
                        {
                            Id = 9,
                            IllnessName = "Хвороба №5",
                            MedicineName = "Декасан",
                            MedicineQuantity = (byte)3
                        },
                        new
                        {
                            Id = 10,
                            IllnessName = "Хвороба №6",
                            MedicineName = "Ібупрофен",
                            MedicineQuantity = (byte)5
                        },
                        new
                        {
                            Id = 11,
                            IllnessName = "Хвороба №6",
                            MedicineName = "Магнікор",
                            MedicineQuantity = (byte)10
                        },
                        new
                        {
                            Id = 12,
                            IllnessName = "Хвороба №7",
                            MedicineName = "Новокаїн",
                            MedicineQuantity = (byte)2
                        },
                        new
                        {
                            Id = 13,
                            IllnessName = "Хвороба №7",
                            MedicineName = "Цефтріаксон",
                            MedicineQuantity = (byte)2
                        },
                        new
                        {
                            Id = 14,
                            IllnessName = "Хвороба №7",
                            MedicineName = "Дофамін-Дарниця",
                            MedicineQuantity = (byte)15
                        },
                        new
                        {
                            Id = 15,
                            IllnessName = "Неробство",
                            MedicineName = "ХНУРЕ",
                            MedicineQuantity = (byte)16
                        },
                        new
                        {
                            Id = 16,
                            IllnessName = "Нудьга",
                            MedicineName = "ХНУРЕ v2",
                            MedicineQuantity = (byte)20
                        });
                });

            modelBuilder.Entity("CORE.Models.Doctor", b =>
                {
                    b.HasOne("CORE.Models.HospitalUnit", "HospitalUnit")
                        .WithMany("Doctors")
                        .HasForeignKey("HospitalUnitName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HospitalUnit");
                });

            modelBuilder.Entity("CORE.Models.HospitalWard", b =>
                {
                    b.HasOne("CORE.Models.HospitalUnit", "HospitalUnit")
                        .WithMany("HospitalWards")
                        .HasForeignKey("HospitalUnitName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HospitalUnit");
                });

            modelBuilder.Entity("CORE.Models.Illness", b =>
                {
                    b.HasOne("CORE.Models.HospitalUnit", "HospitalUnit")
                        .WithMany("Illnesses")
                        .HasForeignKey("HospitalUnitName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HospitalUnit");
                });

            modelBuilder.Entity("CORE.Models.Patient", b =>
                {
                    b.HasOne("CORE.Models.Illness", "Illness")
                        .WithMany()
                        .HasForeignKey("Diagnosis")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CORE.Models.HospitalWard", "HospitalWard")
                        .WithMany("Patients")
                        .HasForeignKey("HospitalWardNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CORE.Models.Doctor", "AttendingDoctor")
                        .WithMany()
                        .HasForeignKey("AttendingDoctorSurname", "AttendingDoctorName", "AttendingDoctorPatronymic");

                    b.Navigation("AttendingDoctor");

                    b.Navigation("HospitalWard");

                    b.Navigation("Illness");
                });

            modelBuilder.Entity("CORE.Models.Treatment", b =>
                {
                    b.HasOne("CORE.Models.Illness", "Illness")
                        .WithMany("Treatments")
                        .HasForeignKey("IllnessName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CORE.Models.Medicine", "Medicine")
                        .WithMany()
                        .HasForeignKey("MedicineName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Illness");

                    b.Navigation("Medicine");
                });

            modelBuilder.Entity("CORE.Models.HospitalUnit", b =>
                {
                    b.Navigation("Doctors");

                    b.Navigation("HospitalWards");

                    b.Navigation("Illnesses");
                });

            modelBuilder.Entity("CORE.Models.HospitalWard", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("CORE.Models.Illness", b =>
                {
                    b.Navigation("Treatments");
                });
#pragma warning restore 612, 618
        }
    }
}
